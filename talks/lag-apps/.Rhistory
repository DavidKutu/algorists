library("lattice", lib.loc="/usr/lib/R/library")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
a <- 1:10
b <- a ^ 2
qplot(a,b)
wd
wd()
data <- read.table("tipo-cambio.txt",header=T)
View(data)
load(ggplot2)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
qplot(data[,"Cambio"])
qplot(data[,"Cambio"],geom="d")
qplot(data[,"Cambio"],geom="density")
qplot(data[,"Cambio"])
qplot(data[,"Cambio"],geom="density")
length(data[,"Cambio"])
qplot(1:length(data[,"Cambio"]),data[,"Cambio"],geom="density")
seq(length(data[,"Cambio"]))
qplot(seq(length(data[,"Cambio"])),data[,"Cambio"],geom="density")
qplot(x=seq(length(data[,"Cambio"])),y=data[,"Cambio"],geom="density")
qplot(x=seq(length(data[,"Cambio"])),y=as.matrix(data[,"Cambio"]),geom="density")
as.matrix(data$Cambio)
as.vector(data$Cambio)
qplot(x=seq(length(data[,"Cambio"])),y=as.vector(data[,"Cambio"]),geom="density")
head(data)
tail(data)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
data <- read.table("tipo-cambio.txt",header=T)
library(zoo) # for moving average
library(scales) # for units
setwd("~/Desktop/R/Weight/")
str(weights)
#Note that the Date column is being classified as "Factor"
#when we'd like it to be treated as dates
data$Date <- as.Date(data$Fecha, format="%d/%m/%Y")
head(data)
ggplot(data, aes(x=Date, y=Cambio)) + geom_line()
setwd("~")
str(data)
data <- read.table("tipo-cambio.txt",header=T)
str(data)
#Note that the Date column is being classified as "Factor"
#when we'd like it to be treated as dates
data$Fecha <- as.Date(data$Fecha, format="%d/%m/%Y")
head(data)
ggplot(data, aes(x=Fecha, y=Cambio)) + geom_line()
library(zoo) # for moving average
library(scales) # for units
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library(zoo) # for moving average
library(scales) # for units
data <- read.table("tipo-cambio.txt",header=T)
str(data)
#Note that the Date column is being classified as "Factor"
#when we'd like it to be treated as dates
data$Fecha <- as.Date(data$Fecha, format="%d/%m/%Y")
head(data)
ggplot(data, aes(x=Fecha, y=Cambio)) + geom_line()
#Make a moving average plot of the time series to simplify it a bit
data$Cambio.Avg <- rollmean(data$Cambio, 3, fill=list(NA, NA, NA))
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
#Add some annotation to indicate when I left for our honeymoon
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + geom_vline(xintercept=as.numeric(as.Date("2013-08-15")), linetype=2) + annotate("text", x=as.Date("2013-08-15"), y=215, label="Honeymoon", angle=90, vjust=-1)+ theme_bw()
#Modify the annotation style from vertical line to horizontal bar
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + annotate("errorbarh", y=215.8, x=as.Date("2013-08-15"), xmin=as.Date("2013-08-15"), xmax=as.Date("2013-08-20")) + annotate("text", x=as.Date("2013-08-18"), y=217, label="Honeymoon", size=4)+ theme_bw()
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library(scales) # for units
data <- read.table("tipo-cambio.txt",header=T)
str(data)
#Note that the Date column is being classified as "Factor"
#when we'd like it to be treated as dates
data$Fecha <- as.Date(data$Fecha, format="%d/%m/%Y")
head(data)
ggplot(data, aes(x=Fecha, y=Cambio)) + geom_line()
#Make a moving average plot of the time series to simplify it a bit
data$Cambio.Avg <- rollmean(data$Cambio, 3, fill=list(NA, NA, NA))
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
#Add some annotation to indicate when I left for our honeymoon
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + geom_vline(xintercept=as.numeric(as.Date("2013-08-15")), linetype=2) + annotate("text", x=as.Date("2013-08-15"), y=215, label="Honeymoon", angle=90, vjust=-1)+ theme_bw()
#Modify the annotation style from vertical line to horizontal bar
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + annotate("errorbarh", y=215.8, x=as.Date("2013-08-15"), xmin=as.Date("2013-08-15"), xmax=as.Date("2013-08-20")) + annotate("text", x=as.Date("2013-08-18"), y=217, label="Honeymoon", size=4)+ theme_bw()
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library(scales) # for units
data <- read.table("tipo-cambio.txt",header=T)
str(data)
#Note that the Date column is being classified as "Factor"
#when we'd like it to be treated as dates
data$Fecha <- as.Date(data$Fecha, format="%d/%m/%Y")
head(data)
ggplot(data, aes(x=Fecha, y=Cambio)) + geom_line()
#Make a moving average plot of the time series to simplify it a bit
data$Cambio.Avg <- rollmean(data$Cambio, 3, fill=list(NA, NA, NA))
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
#Add some annotation to indicate when I left for our honeymoon
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + geom_vline(xintercept=as.numeric(as.Date("2013-08-15")), linetype=2) + annotate("text", x=as.Date("2013-08-15"), y=215, label="Honeymoon", angle=90, vjust=-1)+ theme_bw()
#Modify the annotation style from vertical line to horizontal bar
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + annotate("errorbarh", y=215.8, x=as.Date("2013-08-15"), xmin=as.Date("2013-08-15"), xmax=as.Date("2013-08-20")) + annotate("text", x=as.Date("2013-08-18"), y=217, label="Honeymoon", size=4)+ theme_bw()
install.packages("zoo")
install.packages("zoo")
library(zoo) # for moving average
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library(scales) # for units
data <- read.table("tipo-cambio.txt",header=T)
str(data)
#Note that the Date column is being classified as "Factor"
#when we'd like it to be treated as dates
data$Fecha <- as.Date(data$Fecha, format="%d/%m/%Y")
head(data)
ggplot(data, aes(x=Fecha, y=Cambio)) + geom_line()
#Make a moving average plot of the time series to simplify it a bit
data$Cambio.Avg <- rollmean(data$Cambio, 3, fill=list(NA, NA, NA))
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
#Add some annotation to indicate when I left for our honeymoon
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + geom_vline(xintercept=as.numeric(as.Date("2013-08-15")), linetype=2) + annotate("text", x=as.Date("2013-08-15"), y=215, label="Honeymoon", angle=90, vjust=-1)+ theme_bw()
#Modify the annotation style from vertical line to horizontal bar
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=200, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + annotate("errorbarh", y=215.8, x=as.Date("2013-08-15"), xmin=as.Date("2013-08-15"), xmax=as.Date("2013-08-20")) + annotate("text", x=as.Date("2013-08-18"), y=217, label="Honeymoon", size=4)+ theme_bw()
library(zoo) # for moving average
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library(scales) # for units
data <- read.table("tipo-cambio.txt",header=T)
str(data)
#Note that the Date column is being classified as "Factor"
#when we'd like it to be treated as dates
data$Fecha <- as.Date(data$Fecha, format="%d/%m/%Y")
head(data)
ggplot(data, aes(x=Fecha, y=Cambio)) + geom_line()
#Make a moving average plot of the time series to simplify it a bit
data$Cambio.Avg <- rollmean(data$Cambio, 3, fill=list(NA, NA, NA))
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
#Add some annotation to indicate when I left for our honeymoon
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + geom_vline(xintercept=as.numeric(as.Date("2013-08-15")), linetype=2) + annotate("text", x=as.Date("2013-08-15"), y=17, label="Honeymoon", angle=90, vjust=-1)+ theme_bw()
#Modify the annotation style from vertical line to horizontal bar
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + annotate("errorbarh", y=15.8, x=as.Date("2013-08-15"), xmin=as.Date("2013-08-15"), xmax=as.Date("2013-08-20")) + annotate("text", x=as.Date("2013-08-18"), y=17, label="Honeymoon", size=4)+ theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + geom_vline(xintercept=as.numeric(as.Date("2013-08-15")), linetype=2) + theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + annotate("Point", x=data$Fecha, y=data$Cambio) + xlab("Fecha") + ylab("Cambio (MXN)") + annotate("errorbarh", y=15.8, x=as.Date("2013-08-15"), xmin=as.Date("2013-08-15"), xmax=as.Date("2013-08-20")) + annotate("text", x=as.Date("2013-08-18"), y=17, label="Honeymoon", size=4)+ theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + xlab("Fecha") + ylab("Cambio (MXN)")
+ theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg)) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="o")) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="#ff9900")) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="ff9900")) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="b")) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() + geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) + xlab("Fecha") + ylab("Cambio (MXN)") + theme_bw()
max(data$Cambio)
argmax(data$Cambio)
arg.max
max.col(data$Cambio)
max.col(data$Cambio.T)
max.col(t(data$Cambio))
m<-max.col(t(data$Cambio))
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=as.Date("2013-08-15"), y=215, label="Honeymoon", angle=90, vjust=-1)
theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=17, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=as.Date("2013-08-15"), y=16, label="Honeymoon", angle=90, vjust=-1)
theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=16, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=as.Date("2013-08-15"), y=16, label="Honeymoon", angle=90, vjust=-1)
theme_bw()
#Make a moving average plot of the time series to simplify it a bit
data$Cambio.Avg <- rollmean(data$Cambio, 3, fill=list(NA, NA, NA))
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=16, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=as.Date("2013-08-15"), y=16, label="Maxima", angle=90, vjust=-1)
theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=16, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=data$Fecha[m], y=16, label="Maxima", angle=90, vjust=-1)
theme_bw()
history
history()
max.col(t(data$Cambio))
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=16, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=data$Fecha[m], y=data$Cambio[m], label="Maxima", angle=90, vjust=-1)
theme_bw()
#Make a moving average plot of the time series to simplify it a bit
data$Cambio.Avg <- rollmean(data$Cambio, 3, fill=list(NA, NA, NA))
m <- max.col(t(data$Cambio))
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=16, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=data$Fecha[m], y=data$Cambio[m], label="Maxima", angle=90, vjust=-1)  +
annotate("errorbarh", y=data$Cambio[m], x=data$Fecha[m], xmin=data$Fecha[m]
theme_bw()
#Make a moving average plot of the time series to simplify it a bit
data$Cambio.Avg <- rollmean(data$Cambio, 3, fill=list(NA, NA, NA))
m <- max.col(t(data$Cambio))
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=16, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=data$Fecha[m], y=data$Cambio[m], label="Maxima", angle=90, vjust=-1)  +
annotate("errorbarh", y=data$Cambio[m], x=data$Fecha[m], xmin=data$Fecha[m])
theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=16, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=data$Fecha[m], y=data$Cambio[m], label="Maxima", angle=90, vjust=-1)  +
annotate("errorbarh", y=data$Cambio[m], x=data$Fecha[m], xmin=data$Fecha[m])
theme_bw()
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=16, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=data$Fecha[m], y=data$Cambio[m], label="Maxima", angle=90, vjust=-1)  +
#annotate("errorbarh", y=data$Cambio[m], x=data$Fecha[m], xmin=data$Fecha[m])
theme_bw()
m <- max.col(t(data$Cambio))
ggplot(data, aes(x=Fecha, y=Cambio.Avg,color="blue")) + geom_line() +
geom_ribbon(aes(ymin=16, ymax=Cambio.Avg), fill="slategray3", alpha=0.25) +
xlab("Fecha") + ylab("Cambio (MXN)") + annotate("text", x=data$Fecha[m], y=data$Cambio[m], label="Maxima", angle=90, vjust=-1)  +
annotate("errorbarh", y=data$Cambio[m], x=data$Fecha[m], xmin=data$Fecha[m])
theme_bw()
rand
rnorm
rnorm(4)
rnorm(4)*rnorm(4).T
x<-rnorm(4)
x*x.T
x*t(x)
x*x
x%*%x
cbind
cbind(x,x,x)
y<-cbind(x,x,x)
y%*%y
y<-cbind(x,x,x,x)
y%*%y
y * y
y
10*y
int(10*y)
round
round(10*y)
round(10*cbind(rnorm(3),rnorm(3),rnorm(3)))
x <- round(10*cbind(rnorm(3),rnorm(3),rnorm(3)))
x*x
x%*%x
x
x
x%*%x
x %*% x
7*9-6*16
6*16
x = c(F,F,T,T)
p = c(F,F,T,T)
q = c(F,T,F,T)
p & q
p && q
p | q
p || q
as.numeric
data(ChickWeight)
X <- data(ChickWeight)
View(X)
X <- ChickWeight
View(X)
View(as.numeric(X))
View(as.numeric(X[1,]))
View(as.numeric(X[,1]))
X[X["Time"] > 4,]
View(X[X["Time"] > 4,])
View(X[X["Time"] > 4 & X["Time"] <= 20,])
View(X[X["Time"] > 4 & X["Time"] <= 10,])
View(X[X["Time"] > 4 & X["Time"] <= 5,])
View(X[X["Time"] > 4 & X["Time"] <= 6,])
3%4
3 % 4
3 mod 4
3 + 4
3 .%. 4
3 .% 4
mod(3,4)
3 %% 4
3 %% 3
4 %% 3
-4 %% 3
-4 %/% 3
View(X[X["Chick"] %% 4 = 0,])
View(X[X["Chick"] %% 4 == 0,])
0 == 0
0 == 1
p
p == T
p == F
View(X["Chick"] %% 4 == 0)
View(X["Chick"] %/% 4 == 0)
View(X["Chick"] %/% 4)
View(X[,"Chick"] %/% 4)
View(X[,3] %/% 4)
View(as.numeric(X[,"Chick"]) %/% 4)
View(X[as.numeric(X["Chick"]) %% 4 == 0,])
View(as.numeric(X[,"Chick"]) %/% 4)
View(as.numeric(X[,"Chick"]) %/% 4 == 0)
View(as.numeric(X[,"Chick"]) %/% 4)
View(as.numeric(X[,"Chick"]) %% 4 == 0)
View(as.numeric(X[,"Chick"]) %% 4)
View(as.numeric(X[,"Chick"]) %% 4 == 0)
View(X[as.numeric(X[,"Chick"]) %% 4 == 0,])
View(X[X[,"Chick"] %% 4 == 0,])
install.packages("manipulate")
install.packages("rgdal")
setwd("~/Documents/algorists/talks/lag-apps")
install.packages("rgdal")
install.packages("rgdal")
library(raster)
myJPG <- raster("fruits.jpg")
data
View(data)
myJPG <- raster("fruits.jpg")
library(rgdal)
install.packages("gdalUtils")
library("gdalUtils", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
library(rgdal)
myJPG <- raster("fruits.jpg")
plot(myJPG)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.0")
qplot(myJPG)
image(myJPG)
myJPG <- raster(system.file("fruits.jpg", package="raster"))
image(myJPG)
myJPG <- raster(system.file("fruits.jpg", package="raster"))
image(myJPG)
